--- 
# TinyTapeout project information
project:
  wokwi_id: 0
  source_files:        
    - apu_pulse.v
    - top.v
  top_module:  "tt_um_apu_pulse"
  tiles: "1x1"

yaml_version: 3.5

documentation: 
  author:       "Johan Euphrosine"      # Your name
  title:        "XLS APU Pulse Oscillator"      # Project title
  language:     "XLS" # other examples include Verilog, Amaranth, VHDL, etc
  description:  "attempt at recreating the square oscillator from the NES APU with XLS"

  how_it_works: |
      currently just implement the frequency and duty cycle control, see:
      https://www.nesdev.org/wiki/APU_Pulse

  how_to_test:  |
      change the duty cycle using dedicated input 0-1
      change the frequency using bidirectional input 0-10
      pull valid input signal high
      pull ready input signal high
      monitor waveform on dedicted output 0

  inputs:               
    - pulse 1 period  0/10
    - pulse 1 period  1/10
    - pulse 1 period  2/10
    - pulse 1 period  3/10
    - pulse 1 period  4/10
    - pulse 1 period  5/10
    - pulse 1 period  6/10
    - pulse 1 period  7/10
  outputs:
    - signal
    - signal valid output flag
    - period ready output flag
    - duty ready output flag
    - none
    - none
    - none
    - none
  bidirectional:
    - pulse 1 period  8/10
    - pulse 1 period  9/10
    - pulse 1 period 10/10
    - pulse 1 duty cycle 0/1
    - pulse 1 duty cycle 1/1
    - period valid input flag
    - duty valid input flag
    - output ready input flag

# The following fields are optional
  tag:          "music, synth, famicom, oscillator"
  external_hw:  "ADC, pots, speaker"
  discord:      "@proppy"
  doc_link:     "https://colab.research.google.com/gist/proppy/72b51551ac736abbcfc4cadd51a9adeb/xls_audio_playground.ipynb"
  clock_hz:     117295
  picture:      "wave.png"
